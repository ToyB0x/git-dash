name: 'git-dash.com'
author: 'ToyB0x'
description: 'Analyze git activity'
branding:
  color: 'blue'
  icon: 'activity'
inputs:
  GDASH_GITHUB_ORGANIZATION_NAME:
    description: "GitHub organization name to analyze"
    required: true
  GDASH_GITHUB_INTERNAL_APP_ID:
    description: "GitHub App ID for GitHub API Read Only Access (Internal App for each organization)"
    required: true
  GDASH_GITHUB_INTERNAL_APP_PRIVATE_KEY_STRING:
    description: "GitHub App private key for GitHub API Read Only Access (Internal App key for each organization)"
    required: true
  # for clasic token or fine grained token (currently not documented / not well-supported)
  #  GDASH_GITHUB_PERSONAL_ACCESS_TOKEN:
  #    description: "Your GitHub personal access token for Github API Read Only Access"
  #    required: true
  GDASH_WORKSPACE_ID:
    description: "Group ID to send report"
    required: true
  GDASH_WORKSPACE_API_KEY:
    description: "Group API key to send report"
    required: true
  GDASH_COLLECT_DAYS_LIGHT_TYPE_ITEMS:
    description: "How many days to collect (light cost items eg: PR, Review)"
    required: true
  GDASH_COLLECT_DAYS_HEAVY_TYPE_ITEMS:
    description: "How many days to collect (heavy cost items eg: Commit, Event Timeline)"
    required: true
  GDASH_DISCARD_DAYS:
    description: "How many days to discard ago"
    required: true
  GDASH_ENV:
    description: "git-dash environment (normally prd)"
    required: false
    default: "prd"
  ONLY_CONFIG_CHECK:
    description: "if true, only check config"
    required: false
    default: "false"
runs:
  using: "composite"
  steps:
    - name: Check out
      uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683 # v4
      with:
        repository: 'ToyB0x/git-dash'

    - name: Enable corepack for pnpm
      run: corepack enable pnpm
      shell: bash

    - name: Setup & Restore Node cache
      uses: actions/setup-node@39370e3970a6d050c480ffad4ff0ed4d3fdee5af # v4
      with:
        cache: 'pnpm'
        node-version-file: 'package.json'

    - name: Install all packages
      run: pnpm install --frozen-lockfile
      shell: bash

    - name: Build all packages
      run: pnpm turbo build --filter=@repo/job
      shell: bash

    - name: Env Check
      run: pnpm jobs check config
      shell: bash
      working-directory: apps/job
      env:
        GDASH_ENV: ${{ inputs.GDASH_ENV }}
        GDASH_GITHUB_ORGANIZATION_NAME: ${{ inputs.GDASH_GITHUB_ORGANIZATION_NAME }}
        GDASH_WORKSPACE_ID: ${{ inputs.GDASH_WORKSPACE_ID }}
        GDASH_WORKSPACE_API_KEY: ${{ inputs.GDASH_WORKSPACE_API_KEY }}
        GDASH_COLLECT_DAYS: ${{ inputs.GDASH_COLLECT_DAYS }}
        GDASH_DISCARD_DAYS: ${{ inputs.GDASH_DISCARD_DAYS }}
        GDASH_GITHUB_INTERNAL_APP_ID: ${{ inputs.GDASH_GITHUB_INTERNAL_APP_ID }}
        GDASH_GITHUB_INTERNAL_APP_PRIVATE_KEY_STRING: ${{ inputs.GDASH_GITHUB_INTERNAL_APP_PRIVATE_KEY_STRING }}

    - name: Restore DB / Migrate DB
      run: pnpm jobs db download && pnpm jobs db migrate
      shell: bash
      if : ${{ inputs.ONLY_CONFIG_CHECK == 'false' }}
      working-directory: apps/job
      env:
        GDASH_ENV: ${{ inputs.GDASH_ENV }}
        GDASH_GITHUB_ORGANIZATION_NAME: ${{ inputs.GDASH_GITHUB_ORGANIZATION_NAME }}
        GDASH_WORKSPACE_ID: ${{ inputs.GDASH_WORKSPACE_ID }}
        GDASH_WORKSPACE_API_KEY: ${{ inputs.GDASH_WORKSPACE_API_KEY }}
        GDASH_COLLECT_DAYS_LIGHT_TYPE_ITEMS: ${{ inputs.GDASH_COLLECT_DAYS_LIGHT_TYPE_ITEMS }}
        GDASH_COLLECT_DAYS_HEAVY_TYPE_ITEMS: ${{ inputs.GDASH_COLLECT_DAYS_HEAVY_TYPE_ITEMS }}
        GDASH_DISCARD_DAYS: ${{ inputs.GDASH_DISCARD_DAYS }}
        GDASH_GITHUB_INTERNAL_APP_ID: ${{ inputs.GDASH_GITHUB_INTERNAL_APP_ID }}
        GDASH_GITHUB_INTERNAL_APP_PRIVATE_KEY_STRING: ${{ inputs.GDASH_GITHUB_INTERNAL_APP_PRIVATE_KEY_STRING }}

    - name: Collect Stats
      run: pnpm jobs aggregate organization
      shell: bash
      if : ${{ inputs.ONLY_CONFIG_CHECK == 'false' }}
      working-directory: apps/job
      env:
        GDASH_ENV: ${{ inputs.GDASH_ENV }}
        GDASH_GITHUB_ORGANIZATION_NAME: ${{ inputs.GDASH_GITHUB_ORGANIZATION_NAME }}
        GDASH_WORKSPACE_ID: ${{ inputs.GDASH_WORKSPACE_ID }}
        GDASH_WORKSPACE_API_KEY: ${{ inputs.GDASH_WORKSPACE_API_KEY }}
        GDASH_COLLECT_DAYS_LIGHT_TYPE_ITEMS: ${{ inputs.GDASH_COLLECT_DAYS_LIGHT_TYPE_ITEMS }}
        GDASH_COLLECT_DAYS_HEAVY_TYPE_ITEMS: ${{ inputs.GDASH_COLLECT_DAYS_HEAVY_TYPE_ITEMS }}
        GDASH_DISCARD_DAYS: ${{ inputs.GDASH_DISCARD_DAYS }}
        GDASH_GITHUB_INTERNAL_APP_ID: ${{ inputs.GDASH_GITHUB_INTERNAL_APP_ID }}
        GDASH_GITHUB_INTERNAL_APP_PRIVATE_KEY_STRING: ${{ inputs.GDASH_GITHUB_INTERNAL_APP_PRIVATE_KEY_STRING }}

    - name: Report Result
      run: pnpm jobs export workspace
      shell: bash
      if : ${{ inputs.ONLY_CONFIG_CHECK == 'false' }}
      working-directory: apps/job
      env:
        GDASH_ENV: ${{ inputs.GDASH_ENV }}
        GDASH_GITHUB_ORGANIZATION_NAME: ${{ inputs.GDASH_GITHUB_ORGANIZATION_NAME }}
        GDASH_WORKSPACE_ID: ${{ inputs.GDASH_WORKSPACE_ID }}
        GDASH_WORKSPACE_API_KEY: ${{ inputs.GDASH_WORKSPACE_API_KEY }}
        GDASH_COLLECT_DAYS_LIGHT_TYPE_ITEMS: ${{ inputs.GDASH_COLLECT_DAYS_LIGHT_TYPE_ITEMS }}
        GDASH_COLLECT_DAYS_HEAVY_TYPE_ITEMS: ${{ inputs.GDASH_COLLECT_DAYS_HEAVY_TYPE_ITEMS }}
        GDASH_DISCARD_DAYS: ${{ inputs.GDASH_DISCARD_DAYS }}
        GDASH_GITHUB_INTERNAL_APP_ID: ${{ inputs.GDASH_GITHUB_INTERNAL_APP_ID }}
        GDASH_GITHUB_INTERNAL_APP_PRIVATE_KEY_STRING: ${{ inputs.GDASH_GITHUB_INTERNAL_APP_PRIVATE_KEY_STRING }}
